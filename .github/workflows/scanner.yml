name: 🎯 Scanner Crypto ETH/BTC Focus

# Executa a cada 15 minutos, 24/7
on:
  schedule:
    - cron: '*/10 * * * *'  # A cada 10 minutos
  
  # Permite execução manual também
  workflow_dispatch:

# Permissões necessárias
permissions:
  contents: read

jobs:
  scanner:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Timeout de segurança
    
    steps:
    # 1. Checkout do código
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    # 2. Setup Python
    - name: 🐍 Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    # 3. Instalar dependências
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # 4. Executar scanner
    - name: 🚀 Run ETH/BTC Scanner
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "🎯 Iniciando Scanner ETH/BTC Focus..."
        echo "📊 Analisando BTC/USDT e ETH/USDT com 6 setups..."
        echo "⏰ Executado em: $(date)"
        python scanner_github_actions.py
        echo "✅ Scanner finalizado!"
        echo "🔄 Próxima execução: em 10 minutos"
    
    # 5. Upload logs em caso de erro
    - name: 📋 Upload Logs on Failure  
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: scanner-logs-${{ github.run_number }}
        path: |
          *.log
          *.json
        retention-days: 7
        
    # 6. Commit arquivos de sinais (se houver alterações)
    - name: 💾 Commit Signal Files
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --quiet && git diff --staged --quiet || git commit -m "🤖 Atualizar sinais monitorados - $(date)"
        git push || echo "Nada para commitar"
